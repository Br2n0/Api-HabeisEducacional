// <auto-generated />
using System;
using Api_HabeisEducacional.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_HabeisEducacional.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api_HabeisEducacional.Models.Aluno", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Alunos_Email_Unique");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Certificado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Aluno_ID")
                        .HasColumnType("int");

                    b.Property<string>("Codigo_Validacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Curso_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Emissao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("Codigo_Validacao")
                        .IsUnique()
                        .HasDatabaseName("IX_Certificados_CodigoValidacao_Unique");

                    b.HasIndex("Curso_ID");

                    b.HasIndex("Aluno_ID", "Curso_ID")
                        .IsUnique()
                        .HasDatabaseName("IX_Certificados_Aluno_Curso_Unique");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Curso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Instrutor")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Matricula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Aluno_ID")
                        .HasColumnType("int");

                    b.Property<int>("Curso_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Matricula")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("Curso_ID");

                    b.HasIndex("Aluno_ID", "Curso_ID")
                        .IsUnique()
                        .HasDatabaseName("IX_Matriculas_Aluno_Curso_Unique");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Certificado", b =>
                {
                    b.HasOne("Api_HabeisEducacional.Models.Aluno", "Aluno")
                        .WithMany("Certificados")
                        .HasForeignKey("Aluno_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Certificados_Alunos");

                    b.HasOne("Api_HabeisEducacional.Models.Curso", "Curso")
                        .WithMany("Certificados")
                        .HasForeignKey("Curso_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Certificados_Cursos");

                    b.Navigation("Aluno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Matricula", b =>
                {
                    b.HasOne("Api_HabeisEducacional.Models.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("Aluno_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Matriculas_Alunos");

                    b.HasOne("Api_HabeisEducacional.Models.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("Curso_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Matriculas_Cursos");

                    b.Navigation("Aluno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Aluno", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Api_HabeisEducacional.Models.Curso", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
